---
- name: Clone passari-web-ui
  git:
    repo: git@museopas-gitlab.northeurope.cloudapp.azure.com:passari/passari-web-ui.git
    dest: "{{passari_web_ui_install_path}}"
    version: "{{passari_web_ui_version}}"
    key_file: "{{passari_home}}/.ssh/id_git_deploy"
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Install passari-web-ui
  pip:
    chdir: "{{passari_web_ui_install_path}}"
    virtualenv: ".venv"
    virtualenv_python: python3.6
    name: .
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Install run-venv.sh
  template:
    src: "templates/scripts/run-venv.sh.j2"
    dest: "{{passari_web_ui_install_path}}/run-venv.sh"
    mode: u=rwx,g=rx,o=rx
  become_user: "{{passari_user}}"
  tags: passari-web-ui

# passari-workflow and passari are required
- name: Clone passari-workflow
  git:
    repo: git@museopas-gitlab.northeurope.cloudapp.azure.com:passari/passari-workflow.git
    dest: "{{passari_workflow_install_path}}"
    version: "{{passari_workflow_version}}"
    key_file: "{{passari_home}}/.ssh/id_git_deploy"
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Install passari-workflow
  pip:
    chdir: "{{passari_workflow_install_path}}"
    virtualenv: "{{passari_web_ui_install_path}}/.venv"
    virtualenv_python: python3.6
    name: .
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Clone passari
  git:
    repo: git@museopas-gitlab.northeurope.cloudapp.azure.com:passari/passari.git
    dest: "{{passari_install_path}}"
    version: "{{passari_version}}"
    key_file: "{{passari_home}}/.ssh/id_git_deploy"
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Install passari
  pip:
    chdir: "{{passari_install_path}}"
    virtualenv: "{{passari_web_ui_install_path}}/.venv"
    virtualenv_python: python3.6
    name: .
  become_user: "{{passari_user}}"
  tags: passari-web-ui

- name: Create passari-web-ui configuration directory
  file:
    path: "/etc/passari-web-ui"
    state: directory
  tags: passari-web-ui

- name: Create passari-web-ui configuration file
  template:
    src: "templates/config/passari-web-ui.config.toml.j2"
    dest: "/etc/passari-web-ui/config.toml"
  tags: passari-web-ui

- name: Create passari-web-ui uWSGI configuration file
  template:
    src: "templates/config/passari_web_ui_uwsgi.ini.j2"
    dest: "/etc/uwsgi.d/passari_web_ui.ini"
    owner: "uwsgi"
    group: "uwsgi"
  notify: restart uwsgi
  tags: passari-web-ui

- name: Create passari-web-ui nginx configuration file
  template:
    src: "templates/config/passari_web_ui_nginx.conf.j2"
    dest: "/etc/nginx/conf.d/passari_web_ui.conf"
  notify: reload nginx config
  tags: passari-web-ui

- name: Add uwsgi_params file for uWSGI
  template:
    src: "templates/config/uwsgi_params.j2"
    dest: "/usr/share/nginx/uwsgi_params"
    owner: "{{passari_user}}"
    group: nginx
    mode: "o="
  notify: restart uwsgi
  tags: passari-web-ui

- name: Check if SSL certificate is available
  stat:
    path: "/etc/letsencrypt/live/{{site_domain}}"
  register: ssl_certificate_dir
  tags: passari-web-ui

- name: Create static file directory
  file:
    path: "{{web_ui_static_root}}"
    state: directory
    owner: "{{passari_user}}"
    group: nginx
    mode: "o="
  tags: passari-web-ui

- name: Copy static files
  shell: "mkdir -p {{item[1]}}; cp -r {{item[0]}}/* {{item[1]}}"
  become_user: "{{passari_user}}"
  loop:
    - ["{{passari_web_ui_install_path}}/src/passari_web_ui/static",
       "{{web_ui_static_root}}/static"]
    - ["{{passari_web_ui_install_path}}/src/passari_web_ui/ui/static",
       "{{web_ui_static_root}}/web-ui/static"]
  tags: passari-web-ui

- name: Set static file directory permissions
  file:
    path: "{{web_ui_static_root}}"
    owner: "{{passari_user}}"
    state: directory
    group: nginx
    mode: "o="
    recurse: true
  tags: passari-web-ui

- name: Create nginx SSL directory
  file:
    path: "/etc/nginx/ssl"
    state: directory
  tags: passari-web-ui

- name: Copy development certificate
  copy:
    src: "files/dev_ssl_cert/{{item}}"
    dest: "/etc/nginx/ssl/{{item}}"
    owner: nginx
    group: nginx
  loop:
    - "dev_cert.crt"
    - "dev_cert.key"
  tags: passari-web-ui

- name: Enable and start nginx
  service:
    name: nginx
    state: started
    enabled: true
  tags: passari-web-ui

- name: Reload uwsgi
  service:
    name: uwsgi
    state: restarted
    enabled: true
  tags: passari-web-ui

- name: Create authentication database tables
  command: "./run-venv.sh flask create-db"
  args:
    chdir: "{{passari_web_ui_install_path}}"
  become_user: "{{passari_user}}"
  tags: passari-web-ui
