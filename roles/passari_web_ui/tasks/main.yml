- name: Install passari-web-ui
  pip:
    chdir: "{{passari_packages_dir}}"
    virtualenv: "{{passari_web_ui_venv_dir}}"
    extra_args: "--find-links={{passari_packages_dir}}/wheels"
    requirements: "requirements-web-ui.txt"
    virtualenv_command: "{{passari_packages_python_executable}} -m venv"
  become: true
  become_user: "{{passari_user_name}}"
  notify:
    - Apply SELinux context to Passari venv dirs
    - Create database tables for Passari Web
  tags: [passari-web-ui-install, web-ui-install, pip-install, install]

- name: Check if Let's Encrypt SSL certificate is available
  stat:
    path: "{{letsencrypt_cert_path}}"
  register: ssl_certificate_dir

- name: Copy development SSL certificate and key
  copy:
    src: "files/dev_ssl_cert/{{item.name}}"
    dest: "{{item.path}}/{{item.name}}"
    owner: root
    group: nginx
    mode: "{{item.mode}}"
  loop:
    - name: "dev_cert.crt"
      path: "{{passari_web_ui_dev_ssl_cert_dir}}"
      mode: u=rw,g=r,o=r
    - name: "dev_cert.key"
      path: "{{passari_web_ui_dev_ssl_key_dir}}"
      mode: u=rw,g=r,o=

- name: Create passari-web-ui configuration directory
  file:
    path: "/etc/passari-web-ui"
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Create passari-web-ui configuration file
  template:
    src: "templates/config/passari-web-ui.config.toml.j2"
    dest: "/etc/passari-web-ui/config.toml"
    owner: "{{passari_user_name}}"
    group: "{{passari_user_name}}"
    mode: u=rw,g=r,o=

- name: Add nginx user to uwsgi group
  user:
    name: "nginx"
    groups: "uwsgi"
    append: true
  notify: Restart nginx

- name: Create directory for uWSGI sockets
  file:
    name: "{{passari_web_ui_uwsgi_socket_dir}}"
    state: directory
    owner: "{{passari_user_name}}"
    group: "uwsgi"
    mode: u=rwx,g=rwx,o=
  notify: Apply SELinux context to uWSGI socket directory

- name: Set SELinux context for uWSGI socket directory
  community.general.sefcontext:
    target: "{{passari_web_ui_uwsgi_socket_dir}}(/.*)?"
    setype: httpd_var_run_t
    state: present
  notify: Apply SELinux context to uWSGI socket directory

- name: Create passari-web-ui uWSGI configuration file
  template:
    src: "templates/config/passari_web_ui_uwsgi.ini.j2"
    dest: "/etc/uwsgi.d/passari_web_ui.ini"
    owner: "{{passari_user_name}}"
    group: "uwsgi"
    mode: u=rw,g=r,o=r
  notify: Restart uwsgi

- name: Create passari-web-ui nginx configuration file
  template:
    src: "templates/config/passari_web_ui_nginx.conf.j2"
    dest: "/etc/nginx/conf.d/passari_web_ui.conf"
    mode: u=rw,g=r,o=r
  notify: Regenerate Passari Web nginx config and restart nginx

- name: Create directories for static files served by nginx
  file:
    path: "{{item}}"
    state: directory
    mode: u=rwx,g=rx,o=rx
  with_items:
    - "{{passari_web_ui_static_root}}"
    - "{{passari_web_ui_static_root}}/web-ui"

- name: Copy static files from venv to nginx static files directory
  ansible.posix.synchronize:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    recursive: true
    delete: true
    owner: false
    group: false
    perms: false
    rsync_opts:
      - "--exclude=web-ui"
  delegate_to: "{{inventory_hostname}}"
  loop:
    - src: "{{passari_web_ui_src_dir}}/static/"
      dest: "{{passari_web_ui_static_root}}/static/"
    - src: "{{passari_web_ui_src_dir}}/ui/static/"
      dest: "{{passari_web_ui_static_root}}/web-ui/static/"

- name: Enable and start nginx
  systemd_service:
    name: nginx
    state: started
    enabled: true
