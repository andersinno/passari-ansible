---
- name: Install required software
  yum:
    name:
      - redis
      - postgresql-server
      - postgresql-contrib
      - postgresql-devel
      - python-psycopg2
  tags:
    - redis
    - postgresql

- name: Check PostgreSQL data directory
  stat:
    path: /var/lib/pgsql/data/base
  register: data_dir
  tags: postgresql

- name: Initialize PostgreSQL server
  command: "postgresql-setup initdb"
  when: not data_dir.stat.exists
  tags: postgresql

- name: Enable PostgreSQL
  service:
    name: postgresql
    state: started
    enabled: true
  tags: postgresql

- name: Create database
  postgresql_db:
    name: "{{ workflow_db_name }}"
  become_user: postgres
  tags: postgresql

- name: Create database user
  postgresql_user:
    name: "{{ workflow_db_user }}"
    password: "{{ workflow_db_password }}"
    db: "{{ workflow_db_name }}"
    encrypted: true
    role_attr_flags: SUPERUSER
  become_user: postgres
  tags: postgresql

- name: Enable local MD5 authentication
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: "^host    all             all             127.0.0.1/32"
    line: "host    all             all             127.0.0.1/32            md5"
  notify:
    - restart postgresql
  tags: postgresql

- name: Enable virtual network MD5 authentication
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: "^host    all             all             10.1.0.0/16"
    line: "host    all             all             10.1.0.0/16             md5"
  notify:
    - restart postgresql
  tags: postgresql

- name: Listen to all addresses with PostgreSQL
  lineinfile:
    path: /var/lib/pgsql/data/postgresql.conf
    regexp: "^listen_addresses"
    line: "listen_addresses = '*'"
  notify:
    - restart postgresql
  tags: postgresql

- name: Set custom PostgreSQL performance settings
  blockinfile:
    path: /var/lib/pgsql/data/postgresql.conf
    marker: "# {mark} POSTGRESQL PERFORMANCE SETTINGS - ANSIBLE MANAGED"
    block: |
      {% for name, value in postgresql_settings.items() %}
      {{ name }} = {{ value }}
      {% endfor %}
  notify:
    - restart postgresql
  tags: postgresql

- name: Set custom sysctl settings
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.valueÂ }}"
  loop: "{{ sysctl_settings|dict2items }}"
  notify:
    - restart postgresql
  tags: postgresql

- name: Set Redis password
  lineinfile:
    path: "/etc/redis.conf"
    regexp: "^requirepass"
    line: "requirepass {{ workflow_redis_password }}"
  notify:
    - restart redis
  tags: redis

- name: Listen to all addresses with Redis
  lineinfile:
    path: /etc/redis.conf
    regexp: "^bind "
    line: "#bind "
  notify:
    - restart redis
  tags: redis

- name: Set custom Redis performance settings
  blockinfile:
    path: /etc/redis.conf
    marker: "# {mark} REDIS PERFORMANCE SETTINGS - ANSIBLE MANAGED"
    block: |
      {% for name, value in redis_settings.items() %}
      {{ name }} {{ value }}
      {% endfor %}
  notify:
    - restart redis
  tags: redis

- name: Enable Redis
  service:
    name: redis
    state: started
    enabled: true
  tags: redis
