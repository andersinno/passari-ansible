---
- name: Install dependencies
  yum:
    name:
      - postgresql-devel
      - python3-devel
  tags: passari-workflow

- name: Clone passari-workflow
  git:
    repo: git@museopas-gitlab.northeurope.cloudapp.azure.com:passari/passari-workflow.git
    dest: "{{ passari_workflow_install_path }}"
    version: "{{ passari_workflow_version }}"
    key_file: "{{ passari_home }}/.ssh/id_git_deploy"
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Install passari-workflow
  pip:
    chdir: "{{ passari_workflow_install_path }}"
    virtualenv: ".venv"
    virtualenv_python: python3.6
    name: .
  become_user: "{{ passari_user }}"
  tags: passari-workflow

# passari is required in order to enqueue tasks
- name: Clone passari
  git:
    repo: git@museopas-gitlab.northeurope.cloudapp.azure.com:passari/passari.git
    dest: "{{ passari_install_path }}"
    version: "{{ passari_version }}"
    key_file: "{{ passari_home }}/.ssh/id_git_deploy"
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Install passari
  pip:
    chdir: "{{ passari_install_path }}"
    virtualenv: "{{ passari_workflow_install_path }}/.venv"
    virtualenv_python: python3.6
    name: .
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Install run-venv.sh
  template:
    src: "templates/scripts/run-venv.sh.j2"
    dest: "{{ passari_workflow_install_path }}/run-venv.sh"
    mode: u=rwx,g=rx,o=rx
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Create passari configuration directory
  file:
    path: "/etc/passari"
    state: directory
  tags: passari-workflow

- name: Create passari configuration file
  template:
    src: "templates/config/passari.config.toml.j2"
    dest: "/etc/passari/config.toml"
  tags: passari-workflow

- name: Create passari-workflow configuration directory
  file:
    path: "/etc/passari-workflow"
    state: directory
  tags: passari-workflow

- name: Copy passari-workflow configuration file
  template:
    src: "templates/config/passari-workflow.config.toml.j2"
    dest: "/etc/passari-workflow/config.toml"
  tags: passari-workflow

- name: Create workflow object directory
  file:
    path: "{{ workflow_package_dir }}"
    state: directory
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Create workflow archive directory
  file:
    path: "{{ workflow_archive_dir }}"
    state: directory
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Run database migrations
  command: "./run-venv.sh alembic upgrade head"
  args:
    chdir: "{{ passari_workflow_install_path }}"
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Create synchronization service files
  template:
    src: "templates/config/{{ item }}.service.j2"
    dest: "/etc/systemd/system/{{ item }}.service"
  loop:
    - "sync-attachments"
    - "sync-objects"
    - "sync-hashes"
    - "sync-processed-sips"
    - "stop-sync-attachments"
    - "stop-sync-objects"
  tags: passari-workflow

- name: Create synchronization timer files
  template:
    src: "templates/config/{{ item }}.timer.j2"
    dest: "/etc/systemd/system/{{ item }}.timer"
  loop:
    - "sync-attachments"
    - "sync-objects"
    - "sync-hashes"
    - "sync-processed-sips"
    - "stop-sync-attachments"
    - "stop-sync-objects"
  tags: passari-workflow

- name: Create worker configuration file
  template:
    src: templates/config/worker_config.py.j2
    dest: "{{ passari_workflow_install_path }}/worker_config.py"
  become_user: "{{ passari_user }}"
  tags: passari-workflow

- name: Create worker scripts
  template:
    src: templates/scripts/{{ item }}-worker.sh.j2
    dest: "{{ passari_workflow_install_path }}/{{ itemÂ }}-worker.sh"
    mode: "u=rwx,g=rx,o=rx"
  become_user: "{{ passari_user }}"
  loop:
    - "download-object"
    - "create-sip"
    - "submit-sip"
    - "confirm-sip"
  tags: passari-workflow

- name: Create worker services
  template:
    src: "templates/config/{{ item }}-worker@.service.j2"
    dest: "/etc/systemd/system/{{ item }}-worker@.service"
  loop:
    - "download-object"
    - "stop-download-object"
    - "create-sip"
    - "submit-sip"
    - "confirm-sip"
  tags: passari-workflow

- name: Create worker timers
  template:
    src: "templates/config/{{ item }}-worker@.timer.j2"
    dest: "/etc/systemd/system/{{ item }}-worker@.timer"
  loop:
    - "download-object"
    - "stop-download-object"
  tags: passari-workflow

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
  tags: passari-workflow

- name: Enable automated startup for sync-objects
  systemd:
    name: "{{ item }}.timer"
    state: "{% if enable_sync_objects %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_sync_objects }}"
  loop:
    - "sync-objects"
    - "stop-sync-objects"
  tags: passari-workflow

- name: Enable automated startup for sync-attachments
  systemd:
    name: "{{ item }}.timer"
    state: "{% if enable_sync_attachments %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_sync_attachments }}"
  loop:
    - "sync-attachments"
    - "stop-sync-attachments"
  tags: passari-workflow

- name: Enable automated startup for sync-hashes
  systemd:
    name: "sync-hashes.timer"
    state: "{% if enable_sync_hashes %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_sync_hashes }}"
  tags: passari-workflow

- name: Enable automate startup for sync-processed-sips
  systemd:
    name: "sync-processed-sips.timer"
    state: "{% if enable_sync_processed_sips %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_sync_processed_sips }}"
  tags: passari-workflow

- name: Stop workers
  command: "systemctl stop {{ item }}-worker@*"
  loop:
    - "download-object"
    - "create-sip"
    - "submit-sip"
    - "confirm-sip"
  tags: passari-workflow

- name: Disable workers
  command: "systemctl disable {{ item }}-worker@*"
  loop:
    - "download-object"
    - "create-sip"
    - "submit-sip"
    - "confirm-sip"
  tags: passari-workflow

- name: Enable and start download-object workers
  systemd:
    name: "download-object-worker@{{ item }}.service"
    state: restarted
    enabled: true
  loop: "{{ range(0, worker_count['download_object']) | list }}"
  when: not enable_scheduled_download_objects
  tags: passari-workflow

# It's necessary to disable the service itself if a deployment moves
# from having the service enabled to having it enabled on certain times
- name: Disable download-object worker
  systemd:
    name: "download-object-worker@{{ item }}.service"
    enabled: false
  loop: "{{ range(0, worker_count['download_object']) | list }}"
  when: enable_scheduled_download_objects
  tags: passari-workflow

- name: Enable download-object timer
  systemd:
    name: "download-object-worker@{{ item }}.timer"
    state: "{% if enable_scheduled_download_objects %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_scheduled_download_objects }}"
  loop: "{{ range(0, worker_count['download_object']) | list }}"
  tags: passari-workflow

- name: Enable stop-download-object timer
  systemd:
    name: "stop-download-object-worker@{{ item }}.timer"
    state: "{% if enable_scheduled_download_objects %}started{% else %}stopped{% endif %}"
    enabled: "{{ enable_scheduled_download_objects }}"
  loop: "{{ range(0, worker_count['download_object']) | list }}"
  tags: passari-workflow

- name: Enable and start create-sip workers
  systemd:
    name: "create-sip-worker@{{ item }}"
    state: restarted
    enabled: true
  loop: "{{ range(0, worker_count['create_sip']) | list }}"
  tags: passari-workflow

- name: Enable and start submit-sip workers
  systemd:
    name: "submit-sip-worker@{{ item }}"
    state: restarted
    enabled: true
  loop: "{{ range(0, worker_count['submit_sip']) | list }}"
  tags: passari-workflow

- name: Enable and start confirm-sip workers
  systemd:
    name: "confirm-sip-worker@{{ item }}"
    state: restarted
    enabled: true
  loop: "{{ range(0, worker_count['confirm_sip']) | list }}"
  tags: passari-workflow
